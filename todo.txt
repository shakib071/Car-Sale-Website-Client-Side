Assignment Category: Assignment-11-assignment_category_15

Project Overview
We are seeking a proficient Car Rental System Developer to lead the creation of a feature-rich, user-centric car rental platform. Your role involves designing and implementing responsive frontend and robust backend systems. The platform will enable seamless car bookings, user authentication, and efficient management of car inventory. Proficiency in frontend technologies like HTML, CSS, JavaScript, React.js, and backend frameworks like Node.js, Express.js, and MongoDB is required. Familiarity with Firebase Authentication, JWT implementation, and advanced filtering techniques will be beneficial. Join us to innovate car rentals through technology and user experience!

Letâ€™s Understand the Website Theme
Users can Add, Update, and Delete Cars listed for rental.
Users can Search and Book Cars based on their availability.
The system provides real-time updates on car availability and booking statuses.
Ensure the Following for Full Marks
Include a README.md file with the project name, purpose, live URL, key features, and npm packages used.
Make the website fully responsive on mobile, tablet, and desktop.
Design with an eye-pleasing color contrast and proper alignment. Avoid cluttered designs.
Deploy properly; no CORS/404/504 errors should appear.


10. My Cars Page (Private)

Update Button:
Triggers a modal with the following editable fields:
Car Model
Daily Rental Price
Availability
Vehicle Registration Number
Features (e.g., GPS, AC, etc.)
Description
Images (use image url)
Location
On form submission, validate the input and save changes to the database.
Notify the user of successful updates via a modal or toast notification.
Delete Button:
Prompts a confirmation modal before proceeding.
Upon confirmation, remove the car from the database.
Updates the table in real-time and notifies the user of the deletion.
If no cars are added, display a message prompting the user to add a car with a link to the "Add Car" page.


17. My Bookings (Private)

Modify Booking Date:
On click, open a modal with a date picker allowing the user to select a new start and end date.
Include options to Confirm or Cancel the action.
Once confirmed, update the table with the modified booking details and save the changes.


18. Challenges
Search Functionality: Add search functionality based on the car model, brand, or location on the available Cars Page. 
JWT Authentication Requirement: Implement JWT-based authentication to secure private routes and verify users. Store the generated token in an HTTP-only cookie after successful login and remove it during logout. Include middleware to validate tokens for access to protected APIs, ensuring session integrity.
Note: Custom method or Firebase which you want to use is upto you.
Incremental Booking Updates:  Use MongoDB operators like $inc to track booking counts.
Add Sorting options(from backend or frontend): On My Cars Page => 
Sorting:
Enable users to sort cars by:
Date Added (Newest First / Oldest First)  or Price (Lowest First / Highest First)


19. Optional Requirements:

Data Visualization: Use chart.js or recharts on my Booking Page . Show charts based on car Daily Rental Price
Layout Toggles: Add buttons for toggling the layout style (grid/list) on the "Available Cars" page.
Explore and implement Tanstack query mutations in your api.
Add one extra feature of your own. This will help you in the future to differentiate your project from others.
